{"version":3,"sources":["test/index.js"],"names":[],"mappings":";;;;;;IAAO,MAAM,2BAAM,QAAQ;;IACpB,YAAY,2BAAM,SAAS;;IAC3B,EAAE,2BAAM,IAAI;;IACZ,IAAI,2BAAM,SAAS;;IACnB,QAAQ,2BAAM,UAAU;;IACxB,GAAG,2BAAM,KAAK;;IACd,MAAM,2BAAM,QAAQ;;AAE3B,IAAI,GAAG,GAAG,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AAC5B,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC;;;AAG1B,QAAQ,CAAC,gBAAgB,EAAE,YAAW;AACpC,MAAI,OAAO,CAAC;;AAEZ,YAAU,CAAC,UAAS,IAAI,EAAE;AACxB,MAAE,yBAAC;;;;;mBACgB,GAAG,EAAE;;AAAtB,mBAAO,oBAAiB,CAAC;AACzB,mBAAO,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;AACvB,gBAAI,EAAE,CAAC;;;;;;KACR,EAAC,EAAE,CAAC;GACN,CAAC,CAAC;AACH,WAAS,CAAC,UAAS,IAAI,EAAE;AACvB,MAAE,yBAAC;;;;;mBACK,MAAM,CAAC,OAAO,CAAC;;AACrB,gBAAI,EAAE,CAAC;;;;;;KACR,EAAC,EAAE,CAAC;GACN,CAAC,CAAC;;AAEH,UAAQ,CAAC,kBAAkB,EAAE,YAAW;AACtC,MAAE,CAAC,iCAAiC,EAAE,UAAS,IAAI,EAAE;AACnD,QAAE,yBAAC;YACG,IAAI,EAQJ,GAAG;;;;AARH,kBAAI,GAAG;AACT,iBAAC,EAAE;AACD,mBAAC,EAAE;AACD,qBAAC,EAAE,EAAE;mBACN;iBACF;eACF;+CACM,YAAY,CAAC,OAAO,EAAE,IAAI,CAAC;;;qBAClB,IAAI,CAAC,yBAAuB,CAAC;;AAAzC,iBAAG;AACP,oBAAM,CAAC,KAAK,CAAC,GAAG,EAAE,WAAW,CAAC,CAAC;AAC/B,kBAAI,EAAE,CAAC;;;;;;OACR,EAAC,EAAE,CAAC;KACN,CAAC,CAAC;;AAEH,MAAE,CAAC,8BAA8B,EAAE,UAAS,IAAI,EAAE;AAChD,QAAE,yBAAC;YACG,IAAI,EAWJ,GAAG,EACE,CAAC;;;;AAZN,kBAAI,GAAG;AACT,iBAAC,EAAE;AACD,mBAAC,EAAE;AACD,qBAAC,EAAE,EAAE;mBACN;AACD,mBAAC,EAAE;AACD,qBAAC,EAAE,EAAE;mBACN;iBACF;eACF;+CACM,YAAY,CAAC,OAAO,EAAE,IAAI,CAAC;;;qBAClB,IAAI,CAAC,+BAA6B,CAAC;;AAA/C,iBAAG;AACP,mBAAS,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;AAC1B,sBAAM,CAAC,AAAC,IAAI,MAAM,CAAC,CAAC,GAAG,KAAK,CAAC,CAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAA;eAC1C;AACD,kBAAI,EAAE,CAAC;;;;;;OACR,EAAC,EAAE,CAAC;KACN,CAAC,CAAC;;GAGJ,CAAC,CAAC;CACJ,CAAC,CAAC","file":"test/index.js","sourcesContent":["import assert from 'assert'\nimport gitTreeMaker from '../lib/';\nimport co from 'co';\nimport exec from 'co-exec';\nimport thunkify from 'thunkify';\nimport tmp from 'tmp';\nimport rimraf from 'rimraf';\n\nvar dir = thunkify(tmp.dir);\nrimraf = thunkify(rimraf);\n\n\ndescribe('git-tree-maker', function() {\n  var tempDir;\n\n  beforeEach(function(next) {\n    co(function *() {\n      tempDir = (yield dir())[0];\n      process.chdir(tempDir);\n      next();\n    })();\n  });\n  afterEach(function(next) {\n    co(function *(){\n      yield rimraf(tempDir);\n      next();\n    })();\n  });\n\n  describe('single path tree', function() {\n    it(\"should have a determinstic tree\", function(next) {\n      co(function *(){\n        var tree = {\n          1: {\n            2: {\n              3: {}\n            }\n          }\n        };\n        yield *gitTreeMaker(tempDir, tree);\n        var log = yield exec('git log --pretty=\"%s\"');\n        assert.equal(log, '3\\n2\\n1\\n');\n        next();\n      })();\n    });\n\n    it(\"should have the complex tree\", function(next) {\n      co(function *(){\n        var tree = {\n          1: {\n            2: {\n              3: {}\n            },\n            4: {\n              5: {}\n            }\n          }\n        };\n        yield *gitTreeMaker(tempDir, tree);\n        var log = yield exec('git log --all --pretty=\"%s\"');\n        for (var i = 1; i < 5; i++) {\n          assert((new RegExp(i + '\\\\n')).test(log))\n        }\n        next();\n      })();\n    });\n\n\n  });\n});\n"],"sourceRoot":"/source/"}