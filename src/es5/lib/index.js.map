{"version":3,"sources":["lib/index.js"],"names":[],"mappings":";;;;;;IAWU,YAAY,2BAAtB,SAAU,YAAY,CAAC,UAAU,EAAE,IAAI;;;;yCAClB,iBAAiB,CAAC,UAAU,CAAC;;AAAjD,kBAAU;yCACH,UAAU,CAAC,IAAI,CAAC;;;;;KAFd,YAAY;CAGrB;;IAIS,iBAAiB,2BAA3B,SAAU,iBAAiB,CAAC,GAAG;;;;AAC9B,WAAG,GAAG,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC,GAAG,EAAE,CAAC;;;eAE/B,IAAI,CAAC,GAAG,CAAC;;AAAvB,aAAK;YACA,KAAK,CAAC,WAAW,EAAE;;;;cACjB,IAAI,KAAK,CAAC,GAAG,GAAG,YAAY,CAAC;;;;;;;;eAG9B,MAAM,CAAC,GAAG,CAAC;;AAElB,eAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;;eACb,IAAI,CAAC,UAAU,CAAC;;4CACf,GAAG;;;;;KAZD,iBAAiB;CAa1B;;IAES,UAAU,2BAApB,SAAU,UAAU,CAAC,IAAI,EAAE,QAAQ;MACzB,MAAM,EACV,OAAO,EAEN,UAAU,EAIV,aAAa,EASd,IAAI;;;;iDAhBU,IAAI;;;;;;AAAd,cAAM;AACV,eAAO,GAAG,IAAI,CAAC,MAAM,CAAC;aACtB,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;;;;AAChB,kBAAU,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,MAAM;;eACzC,IAAI,CAAC,kBAAkB,GAAG,UAAU,GAAG,GAAG,IAAI,QAAQ,IAAI,EAAE,CAAA,AAAC,CAAC;;cAEjE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;;;;;eAC3B,IAAI,CAAC,iCAAiC,CAAC;;AAA7D,qBAAa;AACjB,YAAI,CAAC,aAAa,EAAE;AACnB,iBAAO,CAAC,IAAI,CAAC,eAAe,GAAG,MAAM,CAAC,CAAC;SACvC;;AAEF,cAAM,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;;eACxB,MAAM,CAAC,MAAM,EAAE,MAAM,GAAG,IAAI,CAAC;;;eAC7B,IAAI,CAAC,WAAW,CAAC;;;eACjB,IAAI,CAAC,kBAAiB,GAAG,MAAM,GAAG,IAAG,CAAC;;;eAC3B,IAAI,CAAC,oBAAoB,CAAC;;AAAvC,YAAI;yCACD,UAAU,CAAC,OAAO,EAAE,IAAI,CAAC;;;;;;;;KAlBxB,UAAU;CAoBnB;;IArDM,EAAE,2BAAM,IAAI;;IACZ,IAAI,2BAAM,SAAS;;IACnB,QAAQ,2BAAM,UAAU;;IACxB,IAAI,2BAAM,MAAM;;IAChB,MAAM,2BAAM,QAAQ;;IACpB,EAAE,2BAAM,IAAI;;AAEnB,IAAI,IAAI,GAAG,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;AAC7B,IAAI,MAAM,GAAG,QAAQ,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC;AACrC,IAAI,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC;;AAO9B,MAAM,CAAC,OAAO,GAAG,YAAY,CAAC","file":"lib/index.js","sourcesContent":["import co from 'co';\nimport exec from 'co-exec';\nimport thunkify from 'thunkify';\nimport path from 'path';\nimport mkdirp from 'mkdirp';\nimport fs from 'fs';\n\nvar stat = thunkify(fs.stat);\nvar append = thunkify(fs.appendFile);\nvar mkdirp = thunkify(mkdirp);\n\nfunction *gitTreeMaker(workingDir, tree) {\n\tworkingDir = yield *ensureValidGitDir(workingDir);\n\tyield *createTree(tree);\n}\n\nmodule.exports = gitTreeMaker;\n\nfunction *ensureValidGitDir(dir) {\n\tdir = dir ? path.resolve(dir) : process.cwd();\n\ttry {\n\t\tstats = yield stat(dir);\n\t\tif (!stats.isDirectory()) {\n\t\t\tthrow new Error(dir + \" is a file\");\n\t\t}\n\t} catch (e) {\n\t\tyield mkdirp(dir);\n\t}\n\tprocess.chdir(dir);\n\tyield exec('git init');\n\treturn dir;\n}\n\nfunction *createTree(tree, lastHash) {\n\tfor (var commit in tree) {\n\t\tvar subTree = tree[commit];\n\t\tif (/\\./.test(commit)) {\n\t\t\tvar branchName = commit.split('.')[1] || commit;\n\t\t\tyield exec('git checkout -b ' + branchName + ' ' + (lastHash || ''));\n\t\t}\n\t\tif (Object.keys(tree).length > 1 && !/\\./.test(commit)) {\n\t\t\tvar currentBranch = yield exec('git rev-parse --abbrev-ref HEAD');\n\t\t\tif (!currentBranch) {\n\t\t\t\tconsole.warn('you may lose ' + commit);\n\t\t\t}\n\t\t}\n\t\tcommit = commit.split('.')[0];\n\t\tyield append(commit, commit + '\\n');\n\t\tyield exec('git add .');\n\t\tyield exec('git commit -m \"' + commit + '\"');\n\t\tvar hash = yield exec('git rev-parse HEAD');\n\t\tyield *createTree(subTree, hash);\n\t}\n}\n"],"sourceRoot":"/source/"}